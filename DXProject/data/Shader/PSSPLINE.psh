cbuffer cb0 : register(b0) // constant buffer name : register (empty : num)
{
	matrix	g_matViewProj;
	float3	g_EyePos;
	float	width;
	float3	g_EyeDir;
	float	height;
};

cbuffer cb1 : register(b1) // constant buffer name : register (empty : num)
{
	float3	m_ObjectColor;
	int		m_isDiffuse;
	int		m_isNormal;
	int		m_isSpecular;
	int		m_isOpacity;
	int		m_isReflection;
	int		m_isRefraction;
	int		m_isEnvironment;
};

cbuffer cb2 : register(b2) // constant buffer name : register (empty : num)
{
	matrix  g_InvMatrix;
	float4	g_Lightpos; // 월드 좌표xyz 거리w
	float4	g_LightDir; // 방향 xyz, 세기w
	float3	g_LightColor;
	float	g_fInner;	// 스팟의 내부콘
	float	g_fOutner;	// 스팟의 외부콘
	float	g_fOffset; // 원의 거리에 따른 감쇠에서의 오프셋
	int		g_iFlag;
	float	c1temd;
};

struct PSSPLINE_INPUT // 444 please
{
	float4 Position			: SV_POSITION;	// reservation spell
};

float4 PS(PSSPLINE_INPUT data) : SV_TARGET
{
	return float4(1,0,0,1);
}